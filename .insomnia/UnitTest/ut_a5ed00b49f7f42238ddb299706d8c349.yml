_id: ut_a5ed00b49f7f42238ddb299706d8c349
type: UnitTest
parentId: uts_77759c4edc0e4f55b3d8d2e52c05cdab
modified: 1623320609875
created: 1623314504872
requestId: req_49414d1a0d9642ee93dce0dd7a40d4e7
name: Subject CRUD must success
code: |
  const response1 = await insomnia.send();
  expect(response1.status).to.equal(200);


  ////// 1. list subjects //////
  const response2 = await insomnia.send('req_0a6d3ca591a2418e97acc7b9a6e3b6ce');
  const body2 = JSON.parse(response2.data);

  // 科目データがあること
  expect(body2.length).to.be.least(1, "科目リストを取得できること");
  expect(response2.status).to.equal(200);


  ////// 2. create subject //////
  const response3 = await insomnia.send('req_03d6335c8cfd474987d3570edabc3804');
  expect(response3.status).to.equal(201);
  const body3 = JSON.parse(response3.data);
  expect(body3).to.have.property('subject');

  ////// 3. get created subject //////
  const response4 = await insomnia.send('req_176fd9085de545a495032ec40f0ab37f');
  expect(response4.status).to.equal(200);
  const body4 = JSON.parse(response4.data);

  // timetablesの２つ登録しておいたので
  expect(body4.timetables.length).to.be.equal(2);


  ////// 4. update subject //////
  const response5 = await insomnia.send('req_8e1d8343d54c4a75871fe15c8735fdf7');
  expect(response5.status).to.equal(200);
  const body5 = JSON.parse(response5.data);

  expect(body5).to.have.property('subject');

  ////// 5. get updated subject //////
  const response6 = await insomnia.send('req_855cda81845249fc8ed5b97692be32a1');
  expect(response6.status).to.equal(200);
  const body6 = JSON.parse(response6.data);

  // timetablesの２つ登録しておいたので
  expect(body6.timetables.length).to.be.equal(1);
